# USB SNES Gamepad Calibration Plan

## Current State
- Emulator implementation is working with gamepad support using EmulatorJS
- Gamepad connection detection is in place
- Current setup requires manual button calibration 
- Using Next.js for project structure

## Solution Plan

Implementation for automatic gamepad calibration that appears when:
1. A user connects a gamepad for the first time
2. OR the user explicitly requests recalibration

### Implementation Steps

1. **Create a Gamepad Calibration Component**
   - Develop a modal that guides users through button mapping
   - This will display when a gamepad is first detected
   - Each step will prompt the user to press specific buttons on their controller

2. **Add Calibration Storage**
   - Store calibration data in localStorage
   - Associate calibration with gamepad ID to remember settings
   - Allow for multiple gamepads to be calibrated

3. **Integrate with Existing Code**
   - Modify the `handleGamepadConnected` function to check if the connected gamepad needs calibration
   - Add callback functions to update EmulatorJS's control settings
   - Ensure calibration happens before gameplay begins

4. **Provide Manual Recalibration Option**
   - Add a "Recalibrate Controller" option to the settings menu
   - Allow users to redo calibration if needed

### Technical Details

The implementation would involve:
- Extending the current gamepad detection logic
- Creating a step-by-step visual guide for button mapping
- Using the Gamepad API's button/axis mapping
- Modifying EmulatorJS settings to use the custom mappings

### Visual Flow

```
User connects gamepad → Check if calibrated → If not, show calibration modal →
Step through button assignments → Save calibration → Apply to emulator
```

This approach ensures users get a streamlined experience with their USB SNES gamepad without requiring manual configuration each time.
